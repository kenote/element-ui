
import path from 'path'
import { defineConfig } from 'vite'
import { createVuePlugin } from 'vite-plugin-vue2'
import WindiCSS from 'vite-plugin-windicss'

const libname = 'kl-element-ui'

export default defineConfig({
  resolve: {
    alias: [
      {
        find: '@',
        replacement: __dirname
      },
      {
        find: '~',
        replacement: path.resolve(__dirname, 'packages')
      },
    ]
  },
  // 设置静态文件目录
  // publicDir: 'static',
  // 添加插件
  plugins: [
    createVuePlugin({ jsx: true }),
    WindiCSS(),
  ],
  // 编译选项
  build: {
    outDir: 'lib',
    lib: {
      entry: path.resolve(__dirname, 'packages/index.ts'),
      name: libname,
      formats: ['es', 'umd', 'cjs'], // adding 'umd' requires globals set to every external module
      fileName: (format) => `${libname}.${format}.js`,
    },
    rollupOptions: {
      // external modules won't be bundled into your library
      external: ['vue'], // not every external has a global
      output: {
        // disable warning on src/index.ts using both default and named export
        exports: 'named',
        // Provide global variables to use in the UMD build
        // for externalized deps (not useful if 'umd' is not in lib.formats)
        globals: {
          vue: 'Vue',
        },
      }
    },
    emptyOutDir: false, // to retain the types folder generated by tsc
  }
})